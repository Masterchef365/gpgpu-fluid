#version 450
layout (local_size_x = 32, local_size_y = 32) in;

uniform layout(binding=0) sampler2D read_img;
uniform layout(binding=1, rg32f) image2D write_img;
uniform layout(location=0) float dt;

vec2 adjusted_tex(vec2 pt) {
    vec2 size = imageSize(write_img);
    vec2 uv = (pt + vec2(0.5)) / size;
    return texture(read_img, uv).xy;
}

vec2 advect(vec2 pt) {
    float u = adjusted_tex(pt + vec2(0, -0.5)).x;
    float v = adjusted_tex(pt + vec2(-0.5, 0)).y;
    return pt - vec2(u, v) * dt;
}

void main() {
    ivec2 xy = ivec2(gl_GlobalInvocationID.xy);

    if (dt == 0.) {
        vec2 size = vec2(imageSize(write_img));
        vec2 uv = vec2(xy) / size;
        uv = uv * 2. - 1.;
        vec2 vel = float(length(uv) < 0.1) * vec2(50, 0);
        imageStore(write_img, xy, vec4(vel, 0, 0));
        return;
    }

    // Advect velocity
    vec2 adv_x = advect(xy + vec2(0, 0.5));
    vec2 adv_y = advect(xy + vec2(0.5, 0));

    // Sample flowmap
    float x_vel = adjusted_tex(adv_x + vec2(0, -0.5)).x;
    float y_vel = adjusted_tex(adv_y + vec2(-0.5, 0)).y;

    // Write semi-lagrangian calc
    imageStore(write_img, xy, vec4(vec2(x_vel, y_vel), 0, 0));
}
